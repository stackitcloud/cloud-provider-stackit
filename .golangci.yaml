version: "2"
run:
  issues-exit-code: 1
  tests: true
linters:
  default: none
  enable:
    - bodyclose
    - copyloopvar
    - dogsled
    - dupl
    - exhaustive
    - funlen
    - ginkgolinter
    - goconst
    - gocritic
    - gocyclo
    - goprintffuncname
    - govet
    - importas
    - ineffassign
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - prealloc
    - revive
    - rowserrcheck
    - staticcheck
    - unconvert
    - unparam
    - unused
    - whitespace
  settings:
    dupl:
      threshold: 100
    exhaustive:
      default-signifies-exhaustive: true
    funlen:
      lines: 100
      statements: 50
    goconst:
      min-len: 2
      min-occurrences: 5
    gocritic:
      disabled-checks:
        - dupImport
        - ifElseChain
        - octalLiteral
        - whyNoLint
        - wrapperFunc
        - sprintfQuotedString
      enabled-tags:
        - diagnostic
        - experimental
        - opinionated
        - performance
        - style
    gocyclo:
      min-complexity: 15
    importas:
      alias:
        # kubernetes packages
        - pkg: k8s.io/api/(\w+)/(v[\w\d]+)
          alias: $1$2
        - pkg: k8s.io/apimachinery/pkg/apis/(\w+)/(v[\w\d]+)
          alias: $1$2
        - pkg: k8s.io/apiextensions-apiserver/pkg/apis/(\w+)/(v[\w\d]+)
          alias: $1$2
        - pkg: k8s.io/apimachinery/pkg/api/([^m]\w+)
          alias: api${1}
        - pkg: k8s.io/apimachinery/pkg/api/meta/table
          alias: metatable
        - pkg: k8s.io/apimachinery/pkg/util/(\w+)
          alias: util${1}
        - pkg: k8s.io/client-go/tools/clientcmd/api/(\w+)
          alias: clientcmd${1}
        - pkg: sigs.k8s.io/controller-runtime/pkg/client/fake
          alias: fakeclient
        - pkg: sigs.k8s.io/controller-runtime/pkg/log/zap
          alias: logzap
        - pkg: sigs.k8s.io/controller-runtime/pkg/log
          alias: logf
    lll:
      line-length: 165
    misspell:
      locale: US
    nolintlint:
      allow-unused: false # report any unused nolint directives
      require-explanation: true # require an explanation for nolint directives
      require-specific: true # require nolint directives to be specific about which linter is being skipped
    revive:
      confidence: 0
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - goconst
          - noctx
          - dupl
        path: _test\.go
      - linters:
          - gocritic
        text: uncheckedInlineErr:.+client.Ignore(NotFound|AlreadyExists)
      - linters:
          - nolintlint
        text: should be written without leading space as `//nolint # don't require machine-readable nolint directives (i.e. with no leading space)
      - linters:
          - revive
          - staticcheck
        text: should not use dot imports
      - linters:
          - revive
        text: 'var-naming: avoid meaningless package names'
        path: 'pkg/csi/util/*'
    paths:
      - third_party$
      - builtin$
      - examples$
      - pkg/imagesync/third_party/.*
formatters:
  enable:
    - goimports
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$